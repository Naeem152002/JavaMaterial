package com.services;

import java.util.List;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.dto.UserDto;
import com.entities.User;
import com.excetpions.ResourceNotFoundException;
import com.exservices.RatingClient;
import com.repo.UserRepo;


@Service
public class UserServiceImpl implements UserService{
	

	@Autowired
	private UserRepo userRepo;
	
	@Autowired
	RatingClient ratingClient;

	
	
	@Autowired
	private ModelMapper modelMapper;
	
	@Override
	public UserDto saveUser(UserDto userDto) {
		User user1=modelMapper.map(userDto, User.class);
		User user=userRepo.save(user1);
		
		return modelMapper.map(user, UserDto.class);
	}



	@Override
	public UserDto updateUser(UserDto userDto, int userId) {
		User u=userRepo.findById(userId).orElseThrow(()->new ResourceNotFoundException("User with given id is not found on server!!"+userId) );
		u.setName(userDto.getName());
		u.setEmail(u.getEmail());
		u.setAbout(userDto.getAbout());
		User user=userRepo.save(u);
		return modelMapper.map(user, UserDto.class);
	}



	@Override
	public void deleteUser(int userId) {
		User u=userRepo.findById(userId).orElseThrow(()->new ResourceNotFoundException("User with given id is not found on server!!"+userId) );
		userRepo.delete(u);
	}

	@Override
	public UserDto getSingleUser(int userId) { 
	User user=userRepo.findById(userId).orElseThrow(()->new ResourceNotFoundException("User with given id is not found on server!!"+userId) );
	user.setRatings(ratingClient.getRatingByUserId(user.getUserId()));
	return modelMapper.map(user, UserDto.class);
	}

	@Override
	public List<UserDto> getAllUsers() {
		List<User>listUsers=userRepo.findAll();


		return listUsers.stream().map(user->modelMapper.map(user, UserDto.class)).collect(Collectors.toList());
	}
	
}
